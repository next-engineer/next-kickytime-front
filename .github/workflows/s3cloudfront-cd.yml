name: Deploy React to S3 + CloudFront

on:
  push:
    branches:
      - main
  workflow_dispatch: {}

env:
  AWS_REGION: ap-northeast-2
  S3_BUCKET: kickytime-bucket
  CF_DIST_ID: ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }}
  BUILD_DIR: build

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
      - name: Create .env.production for Vite
        run: |
          cat > .env.production << 'EOF'
          VITE_API_BASE_URL=${{ vars.VITE_API_BASE_URL }}
          VITE_APP_NAME=Kickytime
          VITE_APP_VERSION=1.0.0
          VITE_USE_MOCK_DATA=false
          VITE_DEBUG_MODE=false
          VITE_COGNITO_DOMAIN=${{ vars.VITE_COGNITO_DOMAIN }}
          VITE_COGNITO_CLIENT_ID=${{ vars.VITE_COGNITO_CLIENT_ID }}
          VITE_COGNITO_REDIRECT_URI=${{ vars.VITE_COGNITO_REDIRECT_URI }}
          EOF

      - name: Show env keys (redacted)
        run: sed -e 's/=.*/=<redacted>/' .env.production

      - name: Install & Build
        run: |
          npm ci
          npm run build

      - name: Detect build output dir
        id: detect
        run: |
          set -e
          echo "Repository root:"
          ls -la
          for d in build dist out; do
            if [ -d "$d" ]; then
              echo "Detected build dir: $d"
              echo "BUILD_DIR=$d" >> "$GITHUB_ENV"
              exit 0
            fi
          done
          echo "::error::No build output directory found (expected one of: build, dist, out)."
          exit 1

      - name: Verify build dir
        run: |
          echo "Using BUILD_DIR=$BUILD_DIR"
          ls -la "$BUILD_DIR"

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_DEPLOY_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Upload hashed assets
        run: |
          aws s3 sync "$BUILD_DIR" "s3://$S3_BUCKET" \
            --delete \
            --exclude "index.html" \
            --cache-control "public,max-age=31536000,immutable"

      - name: Upload index.html
        run: |
          aws s3 cp "$BUILD_DIR/index.html" "s3://$S3_BUCKET/index.html" \
            --cache-control "no-cache" \
            --content-type "text/html; charset=utf-8"

      - name: Invalidate index.html
        run: |
          aws cloudfront create-invalidation \
            --distribution-id "$CF_DIST_ID" \
            --paths "/index.html"